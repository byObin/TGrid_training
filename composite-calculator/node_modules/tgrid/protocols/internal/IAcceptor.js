"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IAcceptor = void 0;
var DomainError_1 = require("tstl/exception/DomainError");
var RuntimeError_1 = require("tstl/exception/RuntimeError");
var IAcceptor;
(function (IAcceptor) {
    function inspect(state, method) {
        // NO ERROR
        if (state === 1 /* OPEN */)
            return null;
        // ERROR, ONE OF THEM
        else if (state === -1 /* NONE */)
            return new DomainError_1.DomainError("Error on " + method + "(): not accepted yet.");
        else if (state === 0 /* ACCEPTING */)
            return new DomainError_1.DomainError("Error on " + method + "(): it's on accepting, wait for a second.");
        else if (state === -2 /* REJECTING */ || 2 /* CLOSING */)
            return new RuntimeError_1.RuntimeError("Error on " + method + "(): the connection is on closing.");
        else if (state === 3 /* CLOSED */)
            return new RuntimeError_1.RuntimeError("Error on " + method + "(): the connection has been closed.");
        // UNKNOWN ERROR, IT MAY NOT OCCURED
        else
            return new RuntimeError_1.RuntimeError("Error on " + method + "(): unknown error, but not connected.");
    }
    IAcceptor.inspect = inspect;
})(IAcceptor = exports.IAcceptor || (exports.IAcceptor = {}));
//# sourceMappingURL=IAcceptor.js.map