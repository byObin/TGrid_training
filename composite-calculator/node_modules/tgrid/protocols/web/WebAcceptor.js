"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebAcceptor = void 0;
var Communicator_1 = require("../../components/Communicator");
var IAcceptor_1 = require("../internal/IAcceptor");
var WebError_1 = require("./WebError");
var DomainError_1 = require("tstl/exception/DomainError");
/**
 * Web Socket Acceptor.
 *  - available only in NodeJS.
 *
 * The `WebAcceptor` is a communicator class interacting with the remote (web socket) client
 * using RFC (Remote Function Call). The `WebAcceptor` objects are always created by the
 * {@link WebServer} class whenever a remote client connects to its server.
 *
 * To accept connection and start interaction with the remote client, call the {@link accept}()
 * method with special `Provider`. Also, don't forget to closing the connection after your
 * busines has been completed.
 *
 * @type Headers Type of headers containing initialization data like activation.
 * @type Provider Type of features provided for remote system.
 * @author Jeongho Nam - https://github.com/samchon
 */
var WebAcceptor = /** @class */ (function (_super) {
    __extends(WebAcceptor, _super);
    /**
     * @hidden
     */
    function WebAcceptor(request, socket, headers) {
        var _this = _super.call(this, undefined) || this;
        _this.state_ = -1 /* NONE */;
        _this.request_ = request;
        _this.socket_ = socket;
        _this.headers_ = headers;
        return _this;
    }
    /* ----------------------------------------------------------------
        CONSTRUCTORS
    ---------------------------------------------------------------- */
    /**
     * @internal
     */
    WebAcceptor.create = function (request, socket, headers) {
        return new WebAcceptor(request, socket, headers);
    };
    /**
     * @inheritDoc
     */
    WebAcceptor.prototype.close = function (code, reason) {
        return __awaiter(this, void 0, void 0, function () {
            var error, ret;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        error = this.inspectReady("WebAcceptor.close");
                        if (error)
                            throw error;
                        ret = this.join();
                        // DO CLOSE
                        this.state_ = 2 /* CLOSING */;
                        if (code === 1000)
                            this.socket_.close();
                        else
                            this.socket_.close(code, reason);
                        // state would be closed in destructor() via _Handle_close()
                        return [4 /*yield*/, ret];
                    case 1:
                        // state would be closed in destructor() via _Handle_close()
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @hidden
     */
    WebAcceptor.prototype.destructor = function (error) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, _super.prototype.destructor.call(this, error)];
                    case 1:
                        _a.sent();
                        this.state_ = 3 /* CLOSED */;
                        return [2 /*return*/];
                }
            });
        });
    };
    Object.defineProperty(WebAcceptor.prototype, "ip", {
        /* ----------------------------------------------------------------
            ACCESSORS
        ---------------------------------------------------------------- */
        get: function () {
            return this.request_.connection.remoteAddress;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebAcceptor.prototype, "path", {
        get: function () {
            return this.request_.url;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebAcceptor.prototype, "state", {
        /**
         * @inheritDoc
         */
        get: function () {
            return this.state_;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebAcceptor.prototype, "headers", {
        /**
         * @inheritDoc
         */
        get: function () {
            return this.headers_;
        },
        enumerable: false,
        configurable: true
    });
    /* ----------------------------------------------------------------
        HANDSHAKES
    ---------------------------------------------------------------- */
    /**
     * @inheritDoc
     */
    WebAcceptor.prototype.accept = function (provider) {
        if (provider === void 0) { provider = null; }
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // VALIDATION
                if (this.state_ !== -1 /* NONE */)
                    throw new DomainError_1.DomainError("Error on WebAcceptor.accept(): you've already accepted (or rejected) the connection.");
                // PREPARE ASSETS
                this.state_ = 0 /* ACCEPTING */;
                this.provider_ = provider;
                // REGISTER EVENTS
                this.socket_.on("message", this._Handle_message.bind(this));
                this.socket_.on("close", this._Handle_close.bind(this));
                this.socket_.send(1 /* OPEN */.toString());
                // FINISHED
                this.state_ = 1 /* OPEN */;
                return [2 /*return*/];
            });
        });
    };
    /**
     * Reject connection.
     *
     * Reject without acceptance, any interaction. The connection would be closed immediately.
     *
     * @param status Status code.
     * @param reason Detailed reason to reject.
     */
    WebAcceptor.prototype.reject = function (status, reason) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        // VALIDATION
                        if (this.state_ !== -1 /* NONE */)
                            throw new DomainError_1.DomainError("You've already accepted (or rejected) the connection.");
                        // SEND CLOSING FRAME
                        this.state_ = -2 /* REJECTING */;
                        this.socket_.close(status, reason);
                        // FINALIZATION
                        return [4 /*yield*/, this.destructor()];
                    case 1:
                        // FINALIZATION
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /* ----------------------------------------------------------------
        COMMUNICATOR
    ---------------------------------------------------------------- */
    /**
     * @hidden
     */
    WebAcceptor.prototype.sendData = function (invoke) {
        this.socket_.send(JSON.stringify(invoke));
    };
    /**
     * @hidden
     */
    WebAcceptor.prototype.inspectReady = function (method) {
        return IAcceptor_1.IAcceptor.inspect(this.state_, method);
    };
    /**
     * @hidden
     */
    WebAcceptor.prototype._Handle_message = function (data) {
        if (typeof data === "string") {
            var invoke = JSON.parse(data);
            this.replyData(invoke);
        }
    };
    /**
     * @hidden
     */
    WebAcceptor.prototype._Handle_close = function (code, reason) {
        return __awaiter(this, void 0, void 0, function () {
            var error;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        error = (code !== 100)
                            ? new WebError_1.WebError(code, reason)
                            : undefined;
                        return [4 /*yield*/, this.destructor(error)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    return WebAcceptor;
}(Communicator_1.Communicator));
exports.WebAcceptor = WebAcceptor;
(function (WebAcceptor) {
})(WebAcceptor = exports.WebAcceptor || (exports.WebAcceptor = {}));
exports.WebAcceptor = WebAcceptor;
//# sourceMappingURL=WebAcceptor.js.map